import createDatabaseConnection from "../../db/connect";

import { removeAllCollections } from "../../testUtils/connectToMongoose";
import { LOGIN } from "../../testUtils/queries";
import { dummyUser } from "../../testUtils/dummyUser";
import { query } from "../../testUtils/query";
import { symulateAuth } from "../../testUtils/mock/mockAuth";
import { setup } from "../../testUtils/beforeAllSetup";

let token: string;

beforeAll(async () => {
  await setup();
});

describe("House", () => {
  it("add house if credensials valid", async () => {
    const res = await query({
      query: ADD_HO,
      variables: {
        email: dummyUser.email,
        password: dummyUser.password,
      },
    });

    expect(res.data?.login).toBeTruthy();
  });

  it("should return null if there is no user with this email", async () => {
    const res = await query({
      query: LOGIN,
      variables: {
        email: "bad_user_email@test.com",
        password: dummyUser.password,
      },
    });

    expect(res.data?.login).toBeFalsy();
  });

  it("should return null if password invalid", async () => {
    const res = await query({
      query: LOGIN,
      variables: {
        email: dummyUser.email,
        password: "bad_user_password",
      },
    });

    expect(res.data?.login).toBeFalsy();
  });
});
